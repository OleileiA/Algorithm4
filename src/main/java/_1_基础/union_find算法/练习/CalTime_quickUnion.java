package _1_基础.union_find算法.练习;


/*
 *  在一台每秒处理10^9条指令的计算机上，估计quick-union算法解决10^9个触点和10^6条连接的动态链接性问题所需要的最短的时间
 * （以天为单位）
 * （假设内循环for每次迭代需要执行10条机器指令）
 *
 * 感觉题目阐述的不是很清楚，需要计算的是什么情况，暂时理解为一开始没有任何两个点是联通的，然后使用10^9个点一直连通到10^6条分量的用时。
 * */


/*
* 与quick-find不同，最佳的情况下实现10^6个通量，那么树的深度越小那么时间的复杂度就越低。
* 同样的深度为1000的10^6次链接为总时间。
* 只需要先计算依次的相连实现1000深度的复杂度就可以了。
*
* quick-union的时间复杂度为 3 + 5 +7 + 9.。。。。。+ 2N + 1 = N^2 = 10^6
* 每次视为10条机器指令，共10^7次机器指令。
*
* 10^7 * 10^6 = 10^13 次 / 10^9 = 10^4秒 = 2.77个小时
*
*
* */

public class CalTime_quickUnion {

}
